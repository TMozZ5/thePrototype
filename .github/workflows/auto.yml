name: Main Pipeline

# Triggers
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**/*.py'
  pull_request:
    branches:
      - main
    paths:
      - '**/*.py'

# Jobs
jobs:
  # TEST
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      # CHECKOUT
      - uses: actions/checkout@v3

      # PYTHON SETUP
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # DEPENDENCIES
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ".github/workflows/dependencies.txt"

      # TEST
      - name: Run Tests
        env:
          PYTHONPATH: ${{ github.workspace }}/project
        run: pytest

      # LINT
      - name: Lint Code
        run: |
          pip install pylint
          pylint --rcfile=.pylintrc project/**/*.py


  # BUILD
  build-and-deploy:
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      # CHECKOUT
      - uses: actions/checkout@v3

      # LOGIN TO DOCKER HUB
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # BUILD AND PUSH
      - name: Build and Push Docker Image
        run: |
          docker build -t prototype:latest -f ".github/workflows/Dockerfile" .
          docker tag prototype:latest tmozz/prototype:latest
          docker push tmozz/prototype:latest

      # DEPLOY TO AWS ECS
      - name: Deploy to AWS ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ".github/workflows/esc-task.json"
          service: prototype-service
          cluster: prototype-cluster
          launch-type: FARGATE
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-2
